name: Executing secret scan action

on:
  workflow_call:
    secrets:
      GH_TOKEN:
        required: true

jobs:
  get-secret-scan-config:
    name: Getting scan config
    runs-on: ubuntu-latest
    container: python:3.9-buster
    outputs:
      SEMGREP_CHECK: ${{ steps.config-pipe-task.outputs.SEMGREP_CHECK }}
      TRIVY_SECRET_CHECK: ${{ steps.config-pipe-task.outputs.TRIVY_SECRET_CHECK }}
      TRIVY_SECRET_THRESHOLD: ${{ steps.config-pipe-task.outputs.TRIVY_SECRET_THRESHOLD }}
      TRIVY_SECRET_SECRET_CONFIG: ${{ steps.config-pipe-task.outputs.TRIVY_SECRET_SECRET_CONFIG }}
      GITLEAKS_CHECK: ${{ steps.config-pipe-task.outputs.GITLEAKS_CHECK }}
    steps:        
      - name: Running config pipeline
        id: config-pipe-task
        uses: pgmfernandes/secret-scan-action-config@main
        with:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
      
  execute-semgrep-scan:
      needs: get-secret-scan-config
      name: Secret Semgrep
      runs-on: ubuntu-latest
      if:  ${{ needs.get-secret-scan-config.outputs.SEMGREP_CHECK == 'True' }}
      steps:
        - name: Semgrep enabled
          run: | 
            echo "Semgrep is enabled ${{ needs.jobs.get-secret-scan-config.outputs.SEMGREP_CHECK }}"
            
  execute-gitleak-scan:
      needs: get-secret-scan-config
      name: Gitleaks scan
      runs-on: ubuntu-latest
      if:  ${{ needs.get-secret-scan-config.outputs.GITLEAKS_CHECK == 'True' }}
      steps:
        - name: Gitleaks enabled
          run: | 
            echo "Gitleaks is enabled ${{ needs.jobs.get-secret-scan-config.outputs.GITLEAKS_CHECK }}"
            
  execute-trivy-scan:
      needs: get-secret-scan-config
      name: Trivy scan
      runs-on: ubuntu-latest
      if:  ${{ needs.get-secret-scan-config.outputs.TRIVY_SECRET_CHECK == 'True' }}
      steps:
        - name: Trivy enabled
          run: | 
            echo "Trivy is enabled ${{ needs.jobs.get-secret-scan-config.outputs.TRIVY_SECRET_CHECK }}"
            echo "Trivy is enabled ${{ needs.jobs.get-secret-scan-config.outputs.TRIVY_SECRET_THRESHOLD }}"
            echo "Trivy is enabled ${{ needs.jobs.get-secret-scan-config.outputs.TRIVY_SECRET_SECRET_CONFIG }}"
